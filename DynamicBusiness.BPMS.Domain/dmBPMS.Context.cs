//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicBusiness.BPMS.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Db_BPMSEntities : DbContext
    {
        public Db_BPMSEntities()
            : base("name=Db_BPMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysBpmsAPIAccess> sysBpmsAPIAccesses { get; set; }
        public virtual DbSet<sysBpmsApplicationPage> sysBpmsApplicationPages { get; set; }
        public virtual DbSet<sysBpmsApplicationPageAccess> sysBpmsApplicationPageAccesses { get; set; }
        public virtual DbSet<sysBpmsCondition> sysBpmsConditions { get; set; }
        public virtual DbSet<sysBpmsDBConnection> sysBpmsDBConnections { get; set; }
        public virtual DbSet<sysBpmsDepartment> sysBpmsDepartments { get; set; }
        public virtual DbSet<sysBpmsDepartmentMember> sysBpmsDepartmentMembers { get; set; }
        public virtual DbSet<sysBpmsDocument> sysBpmsDocuments { get; set; }
        public virtual DbSet<sysBpmsDocumentDef> sysBpmsDocumentDefs { get; set; }
        public virtual DbSet<sysBpmsDocumentFolder> sysBpmsDocumentFolders { get; set; }
        public virtual DbSet<sysBpmsDynamicForm> sysBpmsDynamicForms { get; set; }
        public virtual DbSet<sysBpmsElement> sysBpmsElements { get; set; }
        public virtual DbSet<sysBpmsEmailAccount> sysBpmsEmailAccounts { get; set; }
        public virtual DbSet<sysBpmsEntityDef> sysBpmsEntityDefs { get; set; }
        public virtual DbSet<sysBpmsEvent> sysBpmsEvents { get; set; }
        public virtual DbSet<sysBpmsGateway> sysBpmsGateways { get; set; }
        public virtual DbSet<sysBpmsLane> sysBpmsLanes { get; set; }
        public virtual DbSet<sysBpmsLURow> sysBpmsLURows { get; set; }
        public virtual DbSet<sysBpmsLUTable> sysBpmsLUTables { get; set; }
        public virtual DbSet<sysBpmsMessageType> sysBpmsMessageTypes { get; set; }
        public virtual DbSet<sysBpmsOperation> sysBpmsOperations { get; set; }
        public virtual DbSet<sysBpmsProcess> sysBpmsProcesses { get; set; }
        public virtual DbSet<sysBpmsProcessGroup> sysBpmsProcessGroups { get; set; }
        public virtual DbSet<sysBpmsSequenceFlow> sysBpmsSequenceFlows { get; set; }
        public virtual DbSet<sysBpmsSettingDef> sysBpmsSettingDefs { get; set; }
        public virtual DbSet<sysBpmsSettingValue> sysBpmsSettingValues { get; set; }
        public virtual DbSet<sysBpmsStep> sysBpmsSteps { get; set; }
        public virtual DbSet<sysBpmsTask> sysBpmsTasks { get; set; }
        public virtual DbSet<sysBpmsThread> sysBpmsThreads { get; set; }
        public virtual DbSet<sysBpmsThreadEvent> sysBpmsThreadEvents { get; set; }
        public virtual DbSet<sysBpmsThreadTask> sysBpmsThreadTasks { get; set; }
        public virtual DbSet<sysBpmsThreadTaskDelay> sysBpmsThreadTaskDelays { get; set; }
        public virtual DbSet<sysBpmsThreadVariable> sysBpmsThreadVariables { get; set; }
        public virtual DbSet<sysBpmsUser> sysBpmsUsers { get; set; }
        public virtual DbSet<sysBpmsVariable> sysBpmsVariables { get; set; }
        public virtual DbSet<sysBpmsVariableDependency> sysBpmsVariableDependencies { get; set; }
    
        [DbFunction("Db_BPMSEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string rowData, string delimeter)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("Delimeter", delimeter) :
                new ObjectParameter("Delimeter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[Db_BPMSEntities].[Split](@RowData, @Delimeter)", rowDataParameter, delimeterParameter);
        }
    }
}
